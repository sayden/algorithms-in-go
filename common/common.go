// DO NOT EDIT THIS FILE MANUALLY
// Generated by go generate
package common

func SwapUint(u []uint, a, b int) {
	old := u[b]
	u[b] = u[a]
	u[a] = old
}

func SwapUint8(u []uint8, a, b int) {
	old := u[b]
	u[b] = u[a]
	u[a] = old
}

func SwapUint16(u []uint16, a, b int) {
	old := u[b]
	u[b] = u[a]
	u[a] = old
}

func SwapUint32(u []uint32, a, b int) {
	old := u[b]
	u[b] = u[a]
	u[a] = old
}

func SwapUint64(u []uint64, a, b int) {
	old := u[b]
	u[b] = u[a]
	u[a] = old
}

func SwapInt(u []int, a, b int) {
	old := u[b]
	u[b] = u[a]
	u[a] = old
}

func SwapInt8(u []int8, a, b int) {
	old := u[b]
	u[b] = u[a]
	u[a] = old
}

func SwapInt16(u []int16, a, b int) {
	old := u[b]
	u[b] = u[a]
	u[a] = old
}

func SwapInt32(u []int32, a, b int) {
	old := u[b]
	u[b] = u[a]
	u[a] = old
}

func SwapInt64(u []int64, a, b int) {
	old := u[b]
	u[b] = u[a]
	u[a] = old
}

func SwapFloat32(u []float32, a, b int) {
	old := u[b]
	u[b] = u[a]
	u[a] = old
}

func SwapFloat64(u []float64, a, b int) {
	old := u[b]
	u[b] = u[a]
	u[a] = old
}

func SwapByte(u []byte, a, b int) {
	old := u[b]
	u[b] = u[a]
	u[a] = old
}

func SwapRune(u []rune, a, b int) {
	old := u[b]
	u[b] = u[a]
	u[a] = old
}

func SwapUintptr(u []uintptr, a, b int) {
	old := u[b]
	u[b] = u[a]
	u[a] = old
}

func IsLessUint(a, b uint) bool {
	if a < b {
		return true
	} else {
		return false
	}
}

func IsLessUint8(a, b uint8) bool {
	if a < b {
		return true
	} else {
		return false
	}
}

func IsLessUint16(a, b uint16) bool {
	if a < b {
		return true
	} else {
		return false
	}
}

func IsLessUint32(a, b uint32) bool {
	if a < b {
		return true
	} else {
		return false
	}
}

func IsLessUint64(a, b uint64) bool {
	if a < b {
		return true
	} else {
		return false
	}
}

func IsLessInt(a, b int) bool {
	if a < b {
		return true
	} else {
		return false
	}
}

func IsLessInt8(a, b int8) bool {
	if a < b {
		return true
	} else {
		return false
	}
}

func IsLessInt16(a, b int16) bool {
	if a < b {
		return true
	} else {
		return false
	}
}

func IsLessInt32(a, b int32) bool {
	if a < b {
		return true
	} else {
		return false
	}
}

func IsLessInt64(a, b int64) bool {
	if a < b {
		return true
	} else {
		return false
	}
}

func IsLessFloat32(a, b float32) bool {
	if a < b {
		return true
	} else {
		return false
	}
}

func IsLessFloat64(a, b float64) bool {
	if a < b {
		return true
	} else {
		return false
	}
}

func IsLessByte(a, b byte) bool {
	if a < b {
		return true
	} else {
		return false
	}
}

func IsLessRune(a, b rune) bool {
	if a < b {
		return true
	} else {
		return false
	}
}

func IsLessUintptr(a, b uintptr) bool {
	if a < b {
		return true
	} else {
		return false
	}
}
